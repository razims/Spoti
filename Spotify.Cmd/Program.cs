using System;
using System.Collections.Generic;
using System.Diagnostics.Eventing.Reader;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

using Spoti;
using Spoti.Entity;


namespace Spotify.Cmd
{
    internal class Program
    {


        private static byte[] key = new byte[]
        {
            0x01, 0xEF, 0xC7, 0x4E, 0xF5, 0x05, 0x71, 0x3A, 0xCD, 0x76, 0x04, 0xED, 0xAB, 0x8F, 0x5F, 0x8F,
            0xCF, 0x55, 0x8D, 0x9A, 0x38, 0x59, 0xCC, 0x10, 0x89, 0x5D, 0x1A, 0x6E, 0x25, 0x26, 0x0D, 0xD9,
            0xC9, 0xEC, 0x5A, 0x1D, 0xC3, 0x9D, 0xEA, 0xFA, 0x47, 0x1F, 0x96, 0x4C, 0x2A, 0xA1, 0x2C, 0x42,
            0x95, 0xE8, 0x11, 0xE5, 0x7E, 0x7B, 0xE1, 0x08, 0xA3, 0xD4, 0x4E, 0x74, 0x28, 0xDC, 0x3C, 0x84,
            0xDA, 0x51, 0xDE, 0x4C, 0xF4, 0x50, 0xE8, 0x43, 0x43, 0x19, 0xB2, 0x79, 0xEF, 0x44, 0x14, 0x36,
            0x63, 0xDD, 0x56, 0xD9, 0x6D, 0x10, 0x3B, 0x61, 0x4C, 0xD3, 0x06, 0x55, 0x2E, 0x58, 0x6E, 0xA2,
            0xCE, 0x1E, 0x4A, 0x19, 0xC7, 0x2A, 0x24, 0xDA, 0x65, 0x26, 0xEC, 0xF4, 0x6F, 0xA0, 0xD9, 0xB6,
            0xBC, 0x1F, 0x74, 0x6B, 0x88, 0x8F, 0xA1, 0xF7, 0x22, 0xA4, 0x70, 0xA2, 0xDA, 0x72, 0xB4, 0x24,
            0x92, 0x22, 0xFE, 0x7D, 0x45, 0x4F, 0xDC, 0xD6, 0xCE, 0xFB, 0x62, 0xB3, 0xD2, 0xE8, 0x8F, 0x43,
            0x16, 0xF9, 0x1F, 0xC1, 0x13, 0x62, 0x74, 0x71, 0x62, 0xB4, 0xC3, 0xC5, 0x4A, 0x96, 0xE1, 0xBA,
            0xEF, 0x1F, 0xC2, 0xDD, 0x87, 0x2A, 0x30, 0xFA, 0x04, 0x47, 0x28, 0x48, 0x63, 0x43, 0x40, 0x84,
            0x02, 0x28, 0xE2, 0x78, 0x93, 0xEA, 0xD1, 0x3F, 0xF8, 0x6D, 0x34, 0xDA, 0x0A, 0xA2, 0x3A, 0x60,
            0x56, 0xA3, 0xA3, 0x4E, 0x2A, 0xDA, 0x4F, 0xB1, 0x29, 0x18, 0x1C, 0x99, 0x50, 0x57, 0x3D, 0xC2,
            0x49, 0x69, 0x84, 0x25, 0x54, 0xD9, 0x21, 0x79, 0xCB, 0xD8, 0x11, 0x1D, 0x07, 0xD7, 0xE8, 0x65,
            0x18, 0x6F, 0x1E, 0x7A, 0x61, 0x6F, 0x0B, 0xD2, 0xC8, 0xC3, 0xA4, 0x86, 0x0C, 0x48, 0x83, 0xD1,
            0x0A, 0x58, 0xEB, 0x01, 0x40, 0xFA, 0xCD, 0x6A, 0xE7, 0x7E, 0xEA, 0x9E, 0xFC, 0x41, 0x6C, 0x97,
            0x34, 0x6F, 0x80, 0xA3, 0xA5, 0x5F, 0x2A, 0xFD, 0x47, 0xB5, 0xAD, 0x42, 0xF9, 0xA5, 0x37, 0x27,
            0xAF, 0xD0, 0xE7, 0x7B, 0xF6, 0x62, 0x0B, 0x17, 0xDA, 0x9D, 0xB3, 0xDD, 0x90, 0x30, 0x32, 0x40,
            0xD3, 0x9A, 0x31, 0x56, 0x09, 0x65, 0x39, 0x13, 0xA1, 0xAC, 0x31, 0xFF, 0xF3, 0x84, 0xD9, 0xD1,
            0x5D, 0x68, 0x53, 0x49, 0xDB, 0x88, 0xAB, 0x30, 0xE4, 0x53, 0xB5, 0x0C, 0x2F, 0x78, 0x22, 0x29,
            0x3D
        };

        private static DownloadSession _downloadSession;

        
        public static void Main(string[] args)
        {

            using (_downloadSession = new DownloadSession(key, "Spoti"))
            {
                #region login

                login:
                Console.Write("Username:");
                var username = Console.ReadLine();
                Console.Write("Password:");
                var password = Console.ReadLine();

                if (!_downloadSession.LogIn(username, password))
                {
                    Console.WriteLine("Login Failed. Try again..");
                    goto login;
                }

                Console.WriteLine("Login Succeeded");

                #endregion

                Console.Write("Track Url:");
                var turl = Console.ReadLine();

                var link = new Link(turl, _downloadSession);


                int t = -1;
                _downloadSession.OnReportProgress += delegate(int i)
                {
                    if (i != t)
                    {
                        Console.Title = String.Format("{0}% Loaded", i);
                        t = i;
                    }
                };

                var cts = new CancellationTokenSource();
                using (var track = new Track(link, _downloadSession))
                {
                    link.Dispose();    
                    var task = _downloadSession.TrackToFileAsync(track, "test.wave", cts);

                    Console.WriteLine("Press enter to terminate .. ");
                    Console.Read();

                }


                    

                _downloadSession.LogOut();




                Console.Read();


            }
        }




    }
}
